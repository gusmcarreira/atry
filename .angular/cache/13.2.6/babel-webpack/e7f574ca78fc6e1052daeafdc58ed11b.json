{"ast":null,"code":"import _classCallCheck from \"/Users/gustavocarreira/Documents/GitHub/atry/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/gustavocarreira/Documents/GitHub/atry/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { ChatbotService } from '../chatbot/chatbot.service';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../chatbot/chatbot.service\";\nexport var ExperimentalComponent = /*#__PURE__*/function () {\n  function ExperimentalComponent(chatbotService) {\n    _classCallCheck(this, ExperimentalComponent);\n\n    this.chatbotService = chatbotService;\n    this.url = environment.LOCAL_URL_CHAT;\n  }\n\n  _createClass(ExperimentalComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {}\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(_ref) {\n      var contexto = _ref.contexto,\n          mensagem = _ref.mensagem;\n      this.chatbotService // Manda mensagem ao RASA --> chatbot.service.ts\n      .sendMessage(this.url, this.chatbotService.senderID, {\n        contexto: contexto,\n        mensagem: mensagem\n      });\n    }\n  }]);\n\n  return ExperimentalComponent;\n}();\n\nExperimentalComponent.ɵfac = function ExperimentalComponent_Factory(t) {\n  return new (t || ExperimentalComponent)(i0.ɵɵdirectiveInject(i1.ChatbotService));\n};\n\nExperimentalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ExperimentalComponent,\n  selectors: [[\"app-experimental\"]],\n  decls: 2,\n  vars: 0,\n  consts: [[3, \"click\"]],\n  template: function ExperimentalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function ExperimentalComponent_Template_button_click_0_listener() {\n        return ctx.sendMessage({\n          \"contexto\": \"Fun\\xE7\\xE3o\",\n          \"mensagem\": \"Faltou utilizar :\"\n        });\n      });\n      i0.ɵɵtext(1, \"CLICK ERROR\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJleHBlcmltZW50YWwuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["/Users/gustavocarreira/Documents/GitHub/atry/src/app/experimental/experimental.component.ts"],"names":["ChatbotService","environment","i0","i1","ExperimentalComponent","chatbotService","url","LOCAL_URL_CHAT","contexto","mensagem","sendMessage","senderID","ɵfac","ExperimentalComponent_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","ExperimentalComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","ExperimentalComponent_Template_button_click_0_listener","ɵɵtext","ɵɵelementEnd","styles"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,4BAA/B;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,4BAApB;AACA,WAAaC,qBAAb;AACI,iCAAYC,cAAZ,EAA4B;AAAA;;AACxB,SAAKA,cAAL,GAAsBA,cAAtB;AACA,SAAKC,GAAL,GAAWL,WAAW,CAACM,cAAvB;AACH;;AAJL;AAAA;AAAA,WAKI,oBAAW,CACV;AANL;AAAA;AAAA,WAOI,2BAAoC;AAAA,UAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,UAAZC,QAAY,QAAZA,QAAY;AAChC,WAAKJ,cAAL,CACI;AADJ,OAEKK,WAFL,CAEiB,KAAKJ,GAFtB,EAE2B,KAAKD,cAAL,CAAoBM,QAF/C,EAEyD;AAAEH,QAAAA,QAAQ,EAARA,QAAF;AAAYC,QAAAA,QAAQ,EAARA;AAAZ,OAFzD;AAGH;AAXL;;AAAA;AAAA;;AAaAL,qBAAqB,CAACQ,IAAtB,GAA6B,SAASC,6BAAT,CAAuCC,CAAvC,EAA0C;AAAE,SAAO,KAAKA,CAAC,IAAIV,qBAAV,EAAiCF,EAAE,CAACa,iBAAH,CAAqBZ,EAAE,CAACH,cAAxB,CAAjC,CAAP;AAAmF,CAA5J;;AACAI,qBAAqB,CAACY,IAAtB,GAA6B,aAAcd,EAAE,CAACe,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAEd,qBAAR;AAA+Be,EAAAA,SAAS,EAAE,CAAC,CAAC,kBAAD,CAAD,CAA1C;AAAkEC,EAAAA,KAAK,EAAE,CAAzE;AAA4EC,EAAAA,IAAI,EAAE,CAAlF;AAAqFC,EAAAA,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,OAAJ,CAAD,CAA7F;AAA6GC,EAAAA,QAAQ,EAAE,SAASC,8BAAT,CAAwCC,EAAxC,EAA4CC,GAA5C,EAAiD;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AAC9OvB,MAAAA,EAAE,CAACyB,cAAH,CAAkB,CAAlB,EAAqB,QAArB,EAA+B,CAA/B;AACAzB,MAAAA,EAAE,CAAC0B,UAAH,CAAc,OAAd,EAAuB,SAASC,sDAAT,GAAkE;AAAE,eAAOH,GAAG,CAAChB,WAAJ,CAAgB;AAAE,sBAAY,cAAd;AAAkC,sBAAY;AAA9C,SAAhB,CAAP;AAA8F,OAAzL;AACAR,MAAAA,EAAE,CAAC4B,MAAH,CAAU,CAAV,EAAa,aAAb;AACA5B,MAAAA,EAAE,CAAC6B,YAAH;AACH;AAAE,GALyD;AAKvDC,EAAAA,MAAM,EAAE,CAAC,6KAAD;AAL+C,CAArB,CAA3C","sourcesContent":["import { ChatbotService } from '../chatbot/chatbot.service';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../chatbot/chatbot.service\";\nexport class ExperimentalComponent {\n    constructor(chatbotService) {\n        this.chatbotService = chatbotService;\n        this.url = environment.LOCAL_URL_CHAT;\n    }\n    ngOnInit() {\n    }\n    sendMessage({ contexto, mensagem }) {\n        this.chatbotService\n            // Manda mensagem ao RASA --> chatbot.service.ts\n            .sendMessage(this.url, this.chatbotService.senderID, { contexto, mensagem });\n    }\n}\nExperimentalComponent.ɵfac = function ExperimentalComponent_Factory(t) { return new (t || ExperimentalComponent)(i0.ɵɵdirectiveInject(i1.ChatbotService)); };\nExperimentalComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ExperimentalComponent, selectors: [[\"app-experimental\"]], decls: 2, vars: 0, consts: [[3, \"click\"]], template: function ExperimentalComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function ExperimentalComponent_Template_button_click_0_listener() { return ctx.sendMessage({ \"contexto\": \"Fun\\u00E7\\u00E3o\", \"mensagem\": \"Faltou utilizar :\" }); });\n        i0.ɵɵtext(1, \"CLICK ERROR\");\n        i0.ɵɵelementEnd();\n    } }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJleHBlcmltZW50YWwuY29tcG9uZW50LmNzcyJ9 */\"] });\n"]},"metadata":{},"sourceType":"module"}